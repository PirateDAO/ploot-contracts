// SPDX-License-Identifier: LGPL-3.0-or-later
pragma solidity ^0.8.9;

import { ILootContainer } from "./interfaces/ILootContainer.sol";
import { LootItem } from "./LootItem.sol";

/// @author 0xBlackbeard
contract LootOffHand is LootItem {
	constructor() LootItem("Programmable Loot [Off-hand]", "pLOOT/OFF_HAND") {
		items = [
			"Acid",
			"Alcohol",
			"Amber",
			"Amethyst",
			"Antidote",
			"Apple",
			"Aqua regia",
			"Arrows",
			"Arsenic",
			"Baguette",
			"Banana",
			"Beer",
			"Black pearl",
			"Blood",
			"Blueberries",
			"Book",
			"Boomerang",
			"Bottle",
			"Brain",
			"Bread",
			"Brew",
			"Buckthorn",
			"Butter",
			"Cake",
			"Candy",
			"Carbon",
			"Cheese",
			"Chicken",
			"Chocolate",
			"Chronicle",
			"Cobweb",
			"Cookie",
			"Dagger",
			"Dandelion",
			"Decoction",
			"Doll",
			"Dried fruit",
			"Egg",
			"Emerald",
			"Fiber",
			"Fish",
			"Flask",
			"Flesh",
			"Fluid",
			"Gemstone",
			"Gingerbread",
			"Grapes",
			"Grimoire",
			"Ham",
			"Heart",
			"Herb",
			"Honey",
			"Honeycomb",
			"Horn",
			"Incense",
			"Jar",
			"Journal",
			"Juice",
			"Key",
			"Lantern",
			"Lapis lazuli",
			"Lead",
			"Letter",
			"Liver",
			"Mandrake",
			"Map",
			"Marigold",
			"Mead",
			"Meal",
			"Meat",
			"Milk",
			"Mold",
			"Moonshine",
			"Mushroom",
			"Mutton",
			"Nettle",
			"Notes",
			"Oil",
			"Oren",
			"Package",
			"Paint",
			"Pan",
			"Pear",
			"Pearl",
			"Pepper",
			"Petard",
			"Phosphorus",
			"Pimpernel",
			"Plum",
			"Poison",
			"Poisoned apple",
			"Poppy",
			"Pork",
			"Potato",
			"Potion",
			"Powder",
			"Quartz",
			"Raspberries",
			"Root",
			"Rose",
			"Ruby",
			"Rune",
			"Sapphire",
			"Sceptre",
			"Scroll",
			"Shield",
			"Shuriken",
			"Signet",
			"Skull",
			"Slime",
			"Snowball",
			"Soup",
			"Spirit",
			"Stone",
			"Strawberries",
			"Sulfur",
			"Thistle",
			"Throwing knife",
			"Tin",
			"Token",
			"Tomahawk",
			"Tomato",
			"Tome",
			"Tongue",
			"Tooth",
			"Torch",
			"Tusk",
			"Unguent",
			"Vial",
			"Vinegar",
			"Water",
			"Wine",
			"Wormwood"
		];
	}

	/**
	 * @dev See {LootContainer-mintItem}.
	 */
	function mint(
		address to,
		ILootContainer.Containers container,
		uint256 seed
	) external override onlyOwner {
		mintItem(to, container, Items.OFF_HAND, seed);
	}

	/**
	 * @dev See {LootContainer-tokenURI}.
	 */
	function tokenURI(uint256 tokenId) public view override returns (string memory) {
		return lootURI(tokenId, Items.OFF_HAND);
	}
}
